LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;


ENTITY controller IS 
PORT (resetn,clock		: IN STD_LOGIC;
		x						: OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		y						: OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
		plot					: OUT STD_LOGIC;
		colour				: OUT STD_LOGIC_VECTOR(2 DOWNTO 0));		
END ENTITY;


ARCHITECTURE behaviour OF controller IS

COMPONENT bline
	PORT(	clk				: IN STD_LOGIC;
			x0,x1				: IN STD_LOGIC_VECTOR(7 DOWNTO 0);
			y0,y1				: IN STD_LOGIC_VECTOR(6 DOWNTO 0);
			reset				: IN STD_LOGIC;
			
			plot				: OUT STD_LOGIC;
			outx				: OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
			outy				: OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
			donex				: OUT STD_LOGIC);
END COMPONENT;

COMPONENT fillScreen
	PORT(	clk			:	IN STD_LOGIC;
			resetn		: IN STD_LOGIC;
			x				:	OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
			y				:	OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
			done			: OUT STD_LOGIC;
			donepulse 	: OUT STD_LOGIC;
			plot			: OUT STD_LOGIC
			);
END COMPONENT;

COMPONENT grey
PORT( 	input	: IN std_logic_vector(2 downto 0);
			output:	OUT std_logic_vector(2 downto 0)
			);
END COMPONENT;


SIGNAL ctrl					: STD_LOGIC;

SIGNAL resetb				: STD_LOGIC;
SIGNAL doneB,doneF		: STD_LOGIC;
SIGNAL doneFpulse			: STD_LOGIC;
SIGNAL xF,xB				: STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL yF,yB				: STD_LOGIC_VECTOR(6 DOWNTO 0);
SIGNAL plotF, plotB		: STD_LOGIC;

SIGNAL doneS				: STD_LOGIC;
SIGNAL start				: STD_LOGIC;


SIGNAL x0B, x1B			: STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL y0B, y1B			: STD_LOGIC_VECTOR(6 DOWNTO 0);
SIGNAL colourB				: STD_LOGIC_VECTOR(2 DOWNTO 0);
SIGNAL colourBin			: STD_LOGIC_VECTOR(6 DOWNTO 0);

BEGIN




fillscreen0: fillScreen PORT MAP(clk => clock, resetn => resetn, x=> xF, y=> yF, done=> doneF, donepulse => doneFpulse, plot => plotF);
ctrl <= doneF;

start <= (doneB OR doneFpulse) AND NOT(doneS);
bline0: bline PORT MAP(clk => clock,x0 => x0B , x1 => x1B, y0 => y0B, y1 => y1B, reset => start, plot => plotB,
 outx => xB, outy=> yB, donex =>doneB);

 
graycode: grey PORT MAP (input => colourBin(2 DOWNTO 0), output=>colourB);
 

 
PROCESS(clock, resetn)
VARIABLE i 				: UNSIGNED(6 DOWNTO 0) := "0000000";
VARIABLE x				: UNSIGNED (6 DOWNTO 0);
BEGIN


	IF (resetn = '1') THEN 
		i := "0000000";
		doneS <= '0';
	ELSIF(rising_edge(clock)) THEN
		
	
		IF(start = '1') THEN
			i := i + 1;
			x := to_unsigned(to_integer(i)*8,7);
			
			x0B <= "00000000";
			x1B <= "10011111";
			y0B <= STD_LOGIC_VECTOR(x);
			y1B <= STD_LOGIC_VECTOR(120 - x);
			
			colourBin <= STD_LOGIC_VECTOR( i mod 8);
			
			IF(i = 15) THEN
				doneS <= '1';
			END IF;
		END IF;
	END IF;
END PROCESS;




PROCESS(ctrl,xB,yB, plotB, xF, yF, plotF)
BEGIN
	IF (ctrl = '1') THEN
		x <= xB;
		y <= yB;
		plot <= plotB;
		colour <= colourB; 
	ELSE
		x <= xF;
		y <= yF;
		plot <= plotF;
		colour <= "000";
	END IF;
	
END PROCESS;



END behaviour;












